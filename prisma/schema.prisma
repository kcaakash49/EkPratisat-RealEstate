// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement()) @unique
  fullname String
  mobile String @unique
  email String @unique
  role Role @default(USER)
  password String
  listings Listings[]
  created  DateTime  @default(now())
  favourites Favourites[]

}

model Listings{
  id Int @default(autoincrement()) @unique
  title String
  description String
  bathrooms Int?
  bedrooms Int?
  location String
  price Int
  type String
  category String
  landArea Int?
  numberOfFloors Int?
  area Int?
  houseArea Int?
  user User @relation(fields: [userId], references: [id])
  userId Int
  images Image[]
  longitude String? 
  latitude  String?
  verified Boolean  @default(false)
  created  DateTime  @default(now())
  favourites Favourites[]
  amenities String[]
  
}

model Image {
  id Int @id @default(autoincrement()) @unique
  url String
  listing Listings @relation(fields: [listingId], references: [id])
  listingId Int
}

model TrashListings {
  id Int @unique
  title String
  description String
  bathrooms Int?
  bedrooms Int?
  location String
  price Int
  type String
  category String
  landArea Int?
  numberOfFloors Int?
  area Int?
  houseArea Int?
  userId Int
  images String[]
  created  DateTime
}

model Favourites {
  id Int @id @default(autoincrement()) @unique
  user User @relation(fields:[userId], references:[id])
  userId Int
  listing Listings @relation(fields:[listingId], references:[id])
  listingId Int
  created DateTime @default(now())

  @@unique([userId, listingId])
}

enum Role{
  USER
  PARTNER
  ADMIN
}